{"meta":{"title":"SEINA","subtitle":"SEINA BLOG","description":"个人博客，主要记录笔者在程序媛道路上的技术成长和思想沉淀，也会涉及一些开源技术官方文档翻译～由于博客刚刚搭建几天，评论等个别功能尚未集成，敬请谅解，笔者有时间一定会尽快完善～","author":"John Doe","url":"http://seina.top"},"pages":[{"title":"404 Page Not Found","date":"2017-08-04T15:36:59.000Z","updated":"2018-11-08T17:06:18.484Z","comments":true,"path":"404.html","permalink":"http://seina.top/404.html","excerpt":"","text":""},{"title":"404 Page Not Found","date":"2017-08-04T15:36:59.000Z","updated":"2018-11-08T08:15:56.058Z","comments":true,"path":"index.html","permalink":"http://seina.top/index.html","excerpt":"","text":""},{"title":"about","date":"2018-11-08T08:13:39.000Z","updated":"2018-11-12T02:33:10.548Z","comments":true,"path":"about/index.html","permalink":"http://seina.top/about/index.html","excerpt":"","text":"关与笔者高胜男，又名笙南，现任职于上海DaoCloud微服务开发工程师，主要研究方向是微服务架构落地方案、DevOps持续集成交付、容器编排等。 不喜欢知其然而不知其所以然的流氓工程师，虽然只有一年编程经验，但始终在钻研技术原理的道路上前行 座右铭命运给你一个比别人低的起点是想告诉你，让你用你的一生去奋斗出一个绝地反击的故事。这个故事关于独立、关于梦想、关于勇气、关于坚忍，它不是一个水到渠成的童话，没有一点点人间疾苦，这个故事是有志者事竟成，破釜沉舟，百二秦关终属楚，这个故事是苦心人天不负，卧薪尝胆，三千越甲可吞吴! 关于博客一直以来都想有一个自己的博客，原来在csdn博客上面写文章。现在这本博客网站基于Hexo的主题进行二次整改，感谢原博主的主题，尊重原创，尊重版权。整改后的博客欢迎大家Star，有问题可以提问，我看到之后会在第一时间回复，也可以扫描以下二维码加我微信讨论～"},{"title":"search","date":"2018-11-08T08:14:36.000Z","updated":"2018-11-08T08:14:59.123Z","comments":true,"path":"search/index.html","permalink":"http://seina.top/search/index.html","excerpt":"","text":""}],"posts":[{"title":"如何快速的理解什么是微服务？","slug":"microservice","date":"2018-11-11T14:48:37.000Z","updated":"2018-11-12T02:26:00.591Z","comments":true,"path":"2018/11/11/microservice/","link":"","permalink":"http://seina.top/2018/11/11/microservice/","excerpt":"","text":"维基百科定义微服务 维基百科定义微服务：微服务的概念最早实在2014年由MArtin Fowler和James Lewis共同提出，他们定义了微服务是由单一应用程序构成的小服务，拥有自己的进程和轻量化处理，服务依业务功能设计，以全自动的方式部署，与其他服务使用HTTP API通讯。同时。服务会使用最小规模的集中管理（如Docker）技术，服务可以用不同的编程语言和数据库等。 好吧，可能看完了上面一段话反而觉得更难理解了，老外说的话一向都是这么生涩难懂，其实在我看来，要想深刻理解微服务的价值，需要先感受一下单体应用的痛苦！ 单体应用架构的不足以MVC架构为例，业务通常通过部署一个WAR包到Tomcat中，然后启动Tomcat，监听某个端口号即可对外提供服务。早期在业务规模不大，开发团队人员规模较小的时候，采用单体应用架构，团队的开发和运维成本都可控，虽然偶尔也会解决一下冲突-.-。然而随着业务规模越来越大，代码越来越多，依赖的资源也很多，应用编译打包、部署测试一次，甚至需要10分钟以上，部署效率低下。 团队开发人员不断的扩张，彼此协作开发成本高，比如超过是个人协作修改代码，最后合并到master分支，一起打包部署，这样到了测试阶段只要有一块功能有问题，就得重新编译打包部署，然后重新预览测试，所有开发人员参与其中，效率超低。。 系统的高可用性差，一旦某个功能涉及的代码或者资源有问题，就会影响系统的可用性。比如某段代码不停的创建大对象，并且没有回收，运行一段时间后导致JVM内存泄漏，异常退出，那么部署在同一个JVM进程中的所有服务都不可用，后果很严重。。 我理解的微服务为了解决以上问题，服务化的思想诞生了。通俗来讲，服务化就是把传统的单体应用中通过JAR包依赖产生的本地方法调用，改造成RPC接口产生的远程方法调用。 我过去的项目经历里，比如项目包含用户模块，权限模块，应用模块等，其中权限模块需要调用用户模块取用户信息，应用模块也需要，所以把用户模块拆分出来，独立成一个服务部署，以RPC接口的形式对外提供服务，这样当权限模块调用用户服务的时候从进程内的调用变成远程RPC调用，这样，用户服务就可以独立开发部署测试上线和运维，可以交由专门的团队来做。 什么时候进行服务化拆分：项目第一个阶段主要目标是快速开发和验证想法，证明产品思路是可行。这个阶段的功能设计一般不会太复杂，开发采取快速迭代的方式，架构设计也不适合过度。所有功能打包部署在一起开发测试运维，是最高效也是最节约成本的方式。当可行性验证通过，功能进一步迭代，就可以加入越来越多的新特性。 服务化拆分的两个姿势: 纵向拆分，是从业务维度进行拆分，关联比较密切的拆分成一个微服务，而功能相对独立的业务员适合拆分成一个微服务 横向拆分，将公共且独立的功能模块拆分成一个微服务，即公共的被多个其他服务调用，且依赖的资源不与其他业务耦合 小总结：服务化拆分粒度更细，服务独立部署，独立维护，服务治理要求能力高一些。拆分成微服务之后服务的数量变多，需要统一的服务治理平台，来对各个服务进行管理 可见通过服务化，可以解决单体应用膨胀、团队开发耦合度高、协作效率低下的问题。在我看来，微服务发展到现在，已经不再单单局限于微服务架构本身，还与容器化、DevOps 等新的理念相结合，成为当前移动互联网时代最先进的业务架构解决方案，能更好地迎合移动互联网业务快速迭代的要求。 服务化拆分必须要面临的问题 服务如何定义：对于微服务来说，每个服务都运行在各自的进程中，应该以接口的形式向外界传达自己的信息，无论采用哪种通讯协议，是HTTP还是RPC，服务之间的调用都通过接口描述来约定，约定包括接口名，接口参数以及接口的返回值 服务如何发布和订阅：服务调用者如何获取到需要调用服务的地址，这就需要一个注册中心 服务如何监控：通常对于一个服务，我们最关心的是 QPS（调用量）、AvgTime（平均耗时）以及 P999（99.9% 的请求性能在多少毫秒以内）这些指标。这时候你就需要一种通用的监控方案，能够覆盖业务埋点、数据收集、数据处理，最后到数据展示的全链路功能。 服务如何治理：可以想象，拆分为微服务架构后，服务的数量变多了，依赖关系也变复杂了。比如一个服务的性能有问题时，依赖的服务都势必会受到影响。可以设定一个调用性能阈值，如果一段时间内一直超过这个值，那么依赖服务的调用可以直接返回，这就是熔断，也是服务治理最常用的手段之一。","categories":[{"name":"初识微服务","slug":"初识微服务","permalink":"http://seina.top/categories/初识微服务/"}],"tags":[{"name":"微服务架构","slug":"微服务架构","permalink":"http://seina.top/tags/微服务架构/"}],"keywords":[{"name":"初识微服务","slug":"初识微服务","permalink":"http://seina.top/categories/初识微服务/"}]},{"title":"test999","slug":"test999","date":"2018-11-09T03:31:44.000Z","updated":"2018-11-09T03:33:48.786Z","comments":true,"path":"2018/11/09/test999/","link":"","permalink":"http://seina.top/2018/11/09/test999/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test888","slug":"test888","date":"2018-11-09T03:31:38.000Z","updated":"2018-11-09T03:33:48.783Z","comments":true,"path":"2018/11/09/test888/","link":"","permalink":"http://seina.top/2018/11/09/test888/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test777","slug":"test777","date":"2018-11-09T03:30:50.000Z","updated":"2018-11-09T03:31:04.892Z","comments":true,"path":"2018/11/09/test777/","link":"","permalink":"http://seina.top/2018/11/09/test777/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test666","slug":"test666","date":"2018-11-09T03:28:47.000Z","updated":"2018-11-09T03:30:03.094Z","comments":true,"path":"2018/11/09/test666/","link":"","permalink":"http://seina.top/2018/11/09/test666/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test555","slug":"test555","date":"2018-11-09T03:28:42.000Z","updated":"2018-11-09T03:30:03.094Z","comments":true,"path":"2018/11/09/test555/","link":"","permalink":"http://seina.top/2018/11/09/test555/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test444","slug":"test444","date":"2018-11-09T03:28:37.000Z","updated":"2018-11-09T03:30:03.093Z","comments":true,"path":"2018/11/09/test444/","link":"","permalink":"http://seina.top/2018/11/09/test444/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test333","slug":"test333","date":"2018-11-09T03:28:33.000Z","updated":"2018-11-09T03:30:03.093Z","comments":true,"path":"2018/11/09/test333/","link":"","permalink":"http://seina.top/2018/11/09/test333/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"test222","slug":"test222","date":"2018-11-09T03:28:19.000Z","updated":"2018-11-09T03:30:03.092Z","comments":true,"path":"2018/11/09/test222/","link":"","permalink":"http://seina.top/2018/11/09/test222/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"ElasticSearch-关于映射类型的那些事","slug":"hahah","date":"2018-11-09T03:17:50.000Z","updated":"2018-11-12T02:53:10.133Z","comments":true,"path":"2018/11/09/hahah/","link":"","permalink":"http://seina.top/2018/11/09/hahah/","excerpt":"","text":"删除映射类型 在Elasticsearch 6.0.0 或者更高版本中创建的索引可能只包含单个映射类型，在5.x中创建的索引具有多种映射类型，这个功能将继续在6.x之前运行，映射类型将在7.0.0中完全删除。（5.x-6.x:多种映射类型，6.x之后单个映射类型，7.0.0中映射类型完全消失） 什么是映射类型?自从Elasticsearch首个稳定版本发布以来，每个文档存储在单个索引里，并且分配映射类型，映射类型用来表示要编制索引的文档或者实体的类型，例如twitter索引可能具有user类型和tweet类型。 每个映射类型都有自己的字段，user类型也许有full_name字段，user_name字段，email字段，当然tweet也有content字段，tweeted_at字段和像user类型一样的user_name字段。 每个文档有一个_type元字段包含类型的名字，并且通过在URL指定类型名称s，可以将搜索限制为一种或多种类型： 12345678GET twitter/user,tweet/_search&#123; \"query\": &#123; \"match\": &#123; \"user_name\": \"kimchy\" &#125; &#125;&#125; 这个_type字段和文档的_id结合字段生成_uid字段，所以有相同_id字段的不同类型的文档可以存在同一个索引里。 映射类型也用在建立文档之间的亲子关系，就是question类型的文档可能和answer文档有亲子系。 为什么映射类型会被删除？最初，我们谈到的索引类似SQL数据库中的数据库，类型相当于表。 这是一个很糟糕的比喻，导致了错误的假设，在SQL数据库里，表是彼此相互独立的，这个表中的列和另一个表中同样名字的列没有关系，映射类型中的字段不是这种情况。 在ElasticSearch索引中，在不同映射类型中有相同名字的字段在内部由相同的Lucene字段支持，换而言之，使用上面的例子，user类型中user_name字段被存储在与tweet类型的user_name字段名字相同的字段中，并且这两个不同类型的user_name字段必须有完全相同的映射。 当你想要删除一个类型的date字段和同一个索引中另一个类型的另一个boolean字段时，这可能会很令人绝望。 更重要的是，存储在同一个索引中具有很少或者没有共同字段的不同实体会导致稀疏数据并干扰Lucene有效压缩文档的能力。 综合这些原因，我们决定从ElasticSearch中删除映射类型的概念。 映射类型的替代方法Index per document type第一个替代方法是每个索引对应一个文档类型，不像原来将tweet和user存储在一个twitter索引中，你可以在tweets索引中存储tweets类型和在user索引中存储user类型，索引完全彼此相互独立，因此索引之间不会有字段冲突（比如上文描述的同一索引中不同类型的user_name）这个方法有两个好处: 数据更可能是密集的，并且有益于Lucene中使用压缩技术 用于全文搜索评分更可能是准确的，因为同一索引中的所有文档都代表单个实体。 每个索引都可以适应文档的数量进行大小调整：您可以为user索引使用较少数量的主分片，为tweets索引使用较大的主分片。 自定义类型字段当然，集群中可以存在多少个主分片是有限制的，也许你并想要浪费整个主分片来存储几千个文档的集合，这种情况下，你可以实现你自己自定义的类型，工作方式和原来的_type一样。","categories":[{"name":"ElasticSearch6.4官方文档翻译","slug":"ElasticSearch6-4官方文档翻译","permalink":"http://seina.top/categories/ElasticSearch6-4官方文档翻译/"}],"tags":[{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"http://seina.top/tags/ElasticSearch/"}],"keywords":[{"name":"ElasticSearch6.4官方文档翻译","slug":"ElasticSearch6-4官方文档翻译","permalink":"http://seina.top/categories/ElasticSearch6-4官方文档翻译/"}]},{"title":"test111","slug":"test111","date":"2018-11-09T03:17:50.000Z","updated":"2018-11-09T03:29:50.750Z","comments":true,"path":"2018/11/09/test111/","link":"","permalink":"http://seina.top/2018/11/09/test111/","excerpt":"","text":"","categories":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://seina.top/tags/测试/"}],"keywords":[{"name":"初始化测试文章","slug":"初始化测试文章","permalink":"http://seina.top/categories/初始化测试文章/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-11-08T17:18:43.750Z","updated":"2018-11-08T17:18:43.751Z","comments":true,"path":"2018/11/09/hello-world/","link":"","permalink":"http://seina.top/2018/11/09/hello-world/","excerpt":"","text":"Quick StartCreate a new post1$ hexo new \"My New Post\" Run server1$ hexo server Generate static files1$ hexo generate Deploy to remote sites$ hexo deploy","categories":[],"tags":[],"keywords":[]},{"title":"tags","slug":"tags","date":"2018-11-07T08:28:41.000Z","updated":"2018-11-09T03:09:31.784Z","comments":true,"path":"2018/11/07/tags/","link":"","permalink":"http://seina.top/2018/11/07/tags/","excerpt":"","text":"cover: http://oxnuwmm3w.bkt.clouddn.com/hello-world.jpeg 作者信息，多作者则设置为数组单作者author: nick: BruceYJ link: https://www.github.com/BruceYuj 多作者author: nick: BruceYJlink: https://www.github.com/BruceYuj nick: minfivelink: https://www.github.com/Mrminfive 如果文章为转载文章，需要多加文章出处项editor: name: Minfive link: https://www.github.com/Mrminfive 首页每篇文章的子标题subtitle: your subtitle","categories":[],"tags":[],"keywords":[]}]}